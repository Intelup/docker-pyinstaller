FROM ubuntu:16.04

ENV DEBIAN_FRONTEND noninteractive

ARG WINE_VERSION=winehq-stable
ARG PYTHON_VERSION=3.12.6
ARG PYINSTALLER_VERSION=6.10.0

# We need wine for this all to work, so we'll use the PPA
RUN set -x \
  && dpkg --add-architecture i386 \
  && apt-get update -qy \
  && apt-get install --no-install-recommends -qfy apt-transport-https software-properties-common wget unzip cabextract \
  && wget -nv https://dl.winehq.org/wine-builds/winehq.key \
  && apt-key add winehq.key \
  && add-apt-repository 'https://dl.winehq.org/wine-builds/ubuntu/' \
  && apt-get update -qy \
  && apt-get install --no-install-recommends -qfy $WINE_VERSION winbind cabextract \
  && apt-get clean \
  && wget -nv https://raw.githubusercontent.com/Winetricks/winetricks/master/src/winetricks \
  && chmod +x winetricks \
  && mv winetricks /usr/local/bin

# wine settings
ENV WINEARCH win32
ENV WINEDEBUG fixme-all
ENV WINEPREFIX /wine

# Set Windows version to Windows 10 using winetricks
RUN winetricks win10

# PYPI repository location
ENV PYPI_URL=https://pypi.python.org/
# PYPI index location
ENV PYPI_INDEX_URL=https://pypi.python.org/simple

# Install Python in wine using the embeddable package (since the msi files are no longer available for Python 3.12)
RUN set -x \
  && wget -nv "https://www.python.org/ftp/python/$PYTHON_VERSION/python-$PYTHON_VERSION-embed-win32.zip" -O python-embed.zip \
  && mkdir -p /wine/drive_c/Python312 \
  && unzip python-embed.zip -d /wine/drive_c/Python312 \
  && rm python-embed.zip \
  && cd /wine/drive_c/Python312 \
  && echo 'wine '\''C:\Python312\python.exe'\'' "$@"' > /usr/bin/python \
  && echo 'wine '\''C:\Python312\Scripts\pip.exe'\'' "$@"' > /usr/bin/pip \
  && chmod +x /usr/bin/python /usr/bin/pip

# Install pip and pyinstaller
RUN wget https://bootstrap.pypa.io/get-pip.py \
  && wine C:/Python312/python.exe get-pip.py \
  && rm get-pip.py \
  && /usr/bin/pip install pyinstaller==$PYINSTALLER_VERSION

# Create necessary directories and set up the environment for the project
RUN mkdir /src/ && ln -s /src /wine/drive_c/src
VOLUME /src/
WORKDIR /wine/drive_c/src/
RUN mkdir -p /wine/drive_c/tmp

# Install Microsoft Visual C++ Redistributable for Visual Studio 2017 DLL files
RUN set -x \
  && rm -f "$W_TMP"/* \
  && wget -P "$W_TMP" https://download.visualstudio.microsoft.com/download/pr/11687613/88b50ce70017bf10f2d56d60fcba6ab1/VC_redist.x86.exe \
  && cabextract -q --directory="$W_TMP" "$W_TMP"/VC_redist.x86.exe \
  && cabextract -q --directory="$W_TMP" "$W_TMP/a10" \
  && cabextract -q --directory="$W_TMP" "$W_TMP/a11" \
  && cd "$W_TMP" \
  && rename 's/_/\-/g' *.dll \
  && cp "$W_TMP"/*.dll "$W_SYSTEM_DLLS"/

# Copy the entrypoint script and ensure it's executable
COPY entrypoint-windows.sh /entrypoint.sh
RUN chmod +x /entrypoint.sh

ENTRYPOINT ["/entrypoint.sh"]
